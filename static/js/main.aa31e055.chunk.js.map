{"version":3,"sources":["components/shared/index.ts","components/style/styled-components.ts","index.tsx","epics/index.tsx","dictionary/index.ts","dictionary/websterApi.ts","services/index.ts","services/requests.ts","themes/index.ts","actions/actionTypes.ts","scrabble/index.ts","scrabble/rules.ts","reducers/index.tsx","App.tsx","components/scrabble/Scrabble.tsx","components/content/ScrabbleContent.tsx","themes/colors.ts","themes/fonts.ts","components/search/SearchForm.tsx","components/result/Result.tsx","components/controls/Controls.tsx","components/shared/Card.tsx","container.ts","registerServiceWorker.ts"],"names":["styled_components_1","__importDefault","__webpack_require__","themes_1","Button","default","button","templateObject_1","__makeTemplateObject","colors","darkBlue","fonts","hind","fontWeights","semiBold","exports","_a","__importStar","styled","css","createGlobalStyle","keyframes","ThemeProvider","React","ReactDOM","redux_1","redux_observable_1","epics_1","actionTypes_1","redux_devtools_extension_1","react_redux_1","reducers_1","App_1","registerServiceWorker_1","rootEpic","combineEpics","initEpic","readyEpic","submitEpic","epicMiddleware","createEpicMiddleware","enhancers","applyMiddleware","store","createStore","composeWithDevTools","render","createElement","Provider","App","document","getElementById","dispatch","type","TypeKeys","ON_INIT","dictionary_1","rxjs_1","action","ofType","flatMap","Observable","of","ON_READY","RESET_FORM","changeEpic","ON_CHANGE","ON_SUBMIT","getResult","getState","search","delay","res","SUBMIT_COMPLETE","payload","evaluateResponse","websterApi_1","services_1","scrabble_1","searchItem","url","makeAPIRequest","HTTPMethod","GET","response","word","value","String","definitions","match","isOneLetter","length","isValid","Array","isArray","firstDefinition","suggestions","definition","replace","trim","errorMessage","result","getWordScore","__export","fetchRequest","endPoint","method","data","request","fetch","then","text","fromPromise","makeDummyApiCall","username","city","map","o","JSON","stringify","POST","HTTPService","colors_1","fonts_1","letterDistribution","letter","score","count","split","tile","find","x","toUpperCase","getTileScore","reduce","a","b","initialState","freeze","Object","complete","isLoading","lastWord","placeholder","resultIsVisible","state","nextState","__assign","Scrabble_1","AppWrapper","div","Scrabble","ScrabbleContent_1","SearchForm_1","Result_1","Controls_1","Card_1","container_1","Wrapper","section","background","ResultsWrapper","templateObject_2","UnconnectedScrabble","props","Card","onChange","event","target","requestSearch","submit","Controls","clearSearch","onReset","connect","mapStateToProps","mapDispatchToProps","Title","h2","babyBlue","blue","brand","dark","darkPurple","divider","error","green","grey","lightBlue","lightGrey","lightIcon","lightText","offlineHead","orange","purple","red","sectionText","warmGrey","white","yellow","light","regular","shared_1","SearchRow","Input","input","templateObject_3","key","e","preventDefault","updateSearch","disabled","onClick","Loading","color","resultString","errorString","wordResult","evaluateResultString","titleColor","getTitleColor","Fragment","style","marginLeft","children","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","URL","toString","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"iWAAA,MAAAA,EAAAC,EAAAC,EAAA,KACAC,EAAAD,EAAA,IAcME,EAASJ,EAAAK,QAAOC,OAAMC,MAAAC,EAAA,uPAAoB,qBACf,qDAEM,0CAEV,2CAEU,wFANrBL,EAAAM,OAAOC,SAEDP,EAAAM,OAAOC,SAEZP,EAAAQ,MAAMC,KAENT,EAAAU,YAAYC,UAMtBC,EAAAX,yQC5BT,IAKMY,EALNC,EAAAf,EAAA,KAMEgB,EAAAF,EAAAX,QACAc,EAAAH,EAAAG,IACAC,EAAAJ,EAAAI,kBACAC,EAAAL,EAAAK,UACAC,EAAAN,EAAAM,cAGOP,EAAAI,MAAKJ,EAAAK,oBAAmBL,EAAAM,YAAWN,EAAAO,gBAC5CP,EAAAV,QAAea,wXCdf,IAAAK,EAAAN,EAAAf,EAAA,IACAsB,EAAAP,EAAAf,EAAA,MACAuB,EAAAvB,EAAA,IACAwB,EAAAxB,EAAA,KACAyB,EAAAzB,EAAA,KACA0B,EAAA1B,EAAA,IACA2B,EAAA3B,EAAA,KACA4B,EAAA5B,EAAA,KACA6B,EAAA9B,EAAAC,EAAA,MACA8B,EAAA9B,EAAA,KACA+B,EAAAhC,EAAAC,EAAA,MACAA,EAAA,KAEA,IAAMgC,EAAWR,EAAAS,aAAaR,EAAAS,SAAUT,EAAAU,UAAWV,EAAAW,YAC7CC,EAAiBb,EAAAc,qBAAqBN,GACtCO,EAAYhB,EAAAiB,gBAAgBH,GAE5BI,EAAQlB,EAAAmB,YAAYb,EAAA1B,QAASwB,EAAAgB,oBAAoBJ,IAMvDjB,EAASsB,OACPvB,EAAAwB,cAACjB,EAAAkB,SAAQ,CAACL,MAAOA,GACfpB,EAAAwB,cAACf,EAAAiB,IAAG,OAENC,SAASC,eAAe,SAE1BlB,EAAA5B,UATEsC,EAAMS,SAAS,CAAEC,KAAMzB,EAAA0B,SAASC,6FClBlC,IAAAC,EAAAtD,EAAA,KACAuD,EAAAvD,EAAA,IAEA0B,EAAA1B,EAAA,IACAA,EAAA,KAEaa,EAAAqB,SAAW,SACtBsB,EACAf,GAEA,OAAAe,EAAOC,OAAO/B,EAAA0B,SAASC,SAASK,QAAQ,WACtC,OAAOH,EAAAI,WAAWC,GAAG,CAAET,KAAMzB,EAAA0B,SAASS,cAG7BhD,EAAAsB,UAAY,SACvBqB,EACAf,GAEA,OAAAe,EAAOC,OAAO/B,EAAA0B,SAASS,UAAUH,QAAQ,WACvC,OAAOH,EAAAI,WAAWC,GAAG,CAAET,KAAMzB,EAAA0B,SAASU,gBAG7BjD,EAAAkD,WAAa,SACxBP,EACAf,GACuB,OAAAe,EAAOC,OAAO/B,EAAA0B,SAASY,YAEnCnD,EAAAuB,WAAa,SACxBoB,EACAf,GAEA,OAAAe,EAAOC,OAAO/B,EAAA0B,SAASa,WAAWP,QAAQ,WACxC,OAAOJ,EAAAY,UAAUzB,EAAM0B,WAAWC,QAC/BC,MAAM,KACNX,QACC,SAACY,GACC,OAAAf,EAAAI,WAAWC,GAAmB,CAC5BT,KAAMzB,EAAA0B,SAASmB,gBACfC,QAASlB,EAAAmB,iBAAiBH,EAAK7B,EAAM0B,WAAWC,kGCxC5D,IAAAM,EAAA1E,EAAA,KAASa,EAAA4D,iBAAAC,EAAAD,iBAAkB5D,EAAAqD,UAAAQ,EAAAR,6FCA3B,IAAAS,EAAA3E,EAAA,KAGA4E,EAAA5E,EAAA,KASaa,EAAAqD,UAAY,SAACW,GACtB,IAAMC,EARU,kEAQaD,EAAU,4CACvC,OAAOF,EAAAI,eAAeD,EAAKH,EAAAK,WAAWC,MAG7BpE,EAAA4D,iBAAmB,SAACS,EAAkBd,GAE/C,IAXoBe,EAWdC,EAAQC,OAAOH,GAGfI,EAAqCF,EAAMG,MADpB,oBAEvBC,EAAgC,IAAlBpB,EAAOqB,OACrBC,EAAUC,MAAMC,QAAQN,KAAiBE,EACzCK,EAAkBF,MAAMC,QAAQN,GAAeA,EAAY,GAAK,GAEhEQ,EAAqCV,EAAMG,MADpB,oCAU7B,MAAO,CACHQ,YA7BgBZ,EA6BWU,EA5BxBV,EAAKa,QAAQ,qDAAsD,KA4B1BC,OAC5CC,aALOR,EAAU,GAHVF,EAAc,wCAA0C,gCAS/DW,OAAQT,EAAUd,EAAAwB,aAAahC,GAAU,EACzC0B,YAAaA,EACbX,KAAMf,mJCzCdiC,CAAArG,EAAA,MACA,IAMYgF,EANZzB,EAAAvD,EAAA,KAMA,SAAYgF,GACRA,EAAA,UACAA,EAAA,YAFJ,CAAYA,EAAAnE,EAAAmE,aAAAnE,EAAAmE,WAAU,KAKtB,IAAMsB,EAAe,SAACC,EAAkBC,EAAiBC,GACrD,IAAMC,EAAUC,MAAMJ,EAAU,CAC5BC,OAAQA,IAEPI,KAAK,SAAA1B,GAAY,OAAAA,EAAS2B,SAC/B,OAAOtD,EAAAI,WAAWmD,YAAYJ,IAUrB7F,EAAAkG,iBAAmB,SAACR,GAC7B,OAAOhD,EAAAI,WAAWC,GAPX,CACH,CAAEoD,SAAU,UAAWC,KAAM,UAC7B,CAAED,SAAU,QAASC,KAAM,YAKEC,IAAI,SAAAC,GAAK,OAAAC,KAAKC,UAAUF,MAGhDtG,EAAAkE,eAAiB,SAC1BwB,EACAC,EACAC,GAEA,OAAQD,GACJ,KAAKxB,EAAWsC,KAEhB,KAAKtC,EAAWC,IACZ,OAAOqB,EAAaC,EAAUC,GAClC,QACI,OAAQ3F,EAAAkG,iBAAiBR,wFC1CxB1F,EAAA0G,YAAcZ,4KCA3B,IAAAa,EAAAzH,EAAAC,EAAA,MAGSa,EAAAN,OAHFiH,EAAArH,QACP,IAAAsH,EAAAzH,EAAA,KAEiBa,EAAAJ,MAFRgH,EAAAhH,MAEeI,EAAAF,YAFR8G,EAAA9G,8FCDhB,SAAYyC,GACRA,EAAA,sBACAA,EAAA,kBACAA,EAAA,oBACAA,EAAA,sBACAA,EAAA,wBACAA,EAAA,kCACAA,EAAA,0BAPJ,CAAYvC,EAAAuC,WAAAvC,EAAAuC,SAAQ,oJCApBiD,CAAArG,EAAA,yFCKA,IAAM0H,EACF,CAAC,CAAEC,OAAQ,IAAKC,MAAO,EAAGC,MAAO,IACjC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,EAAGC,MAAO,GAChC,CAAEF,OAAQ,IAAKC,MAAO,GAAIC,MAAO,GACjC,CAAEF,OAAQ,IAAKC,MAAO,GAAIC,MAAO,IASxBhH,EAAAuF,aAAe,SAACjB,GACzB,OAAIA,EAAKM,QAAU,EACR,EAEJN,EAAK2C,MAAM,IACbZ,IAAI,SAAAS,GAAU,OAZF,SAACA,GAClB,IAAMI,EAAyBL,EAAmBM,KAC9C,SAAAC,GAAK,OAAAA,EAAEN,SAAWA,EAAOO,gBAE7B,OAAOH,EAAOA,EAAKH,MAAQ,EAQRO,CAAaR,KAC3BS,OAAO,SAACC,EAAWC,GAAc,OAAAD,EAAIC,oRC9C9C,IAAA5G,EAAA1B,EAAA,IAMMuI,GAAeC,EAFbC,OAAAD,QAEoB,CAC1BE,UAAU,EACVxC,aAAc,GACdyC,WAAW,EACXC,SAAU,GACVC,YAAa,GACb1C,OAAQ,EACR2C,iBAAiB,EACjB1E,OAAQ,KAGVvD,EAAAV,QAAA,SACE4I,EACAvF,GAEA,IAAIwF,EAEJ,YALA,IAAAD,MAAAR,GAKQ/E,EAAOL,MACb,KAAKzB,EAAA0B,SAASS,SACZmF,EAASC,EAAA,GACJF,EAAK,CACRJ,WAAW,IAEb,MAEF,KAAKjH,EAAA0B,SAASU,WACZkF,EAASC,EAAA,GACJF,EAAK,CACRL,UAAU,EACVI,iBAAiB,EACjB1E,OAAQ,KAEV,MAEF,KAAK1C,EAAA0B,SAASY,UACZgF,EAASC,EAAA,GACJF,EAAK,CACRL,UAAU,EACVtE,OAAQZ,EAAOgB,UAEjB,MAEF,KAAK9C,EAAA0B,SAASa,UACZ+E,EAASC,EAAA,GACJF,EAAK,CACRL,UAAU,EACVC,WAAW,EACXG,iBAAiB,IAEnB,MAEF,KAAKpH,EAAA0B,SAASmB,gBACZyE,EAASC,EAAA,GACJF,EAAK,CACRL,UAAU,EACV3C,WAAYvC,EAAOgB,QAAQuB,WAC3BG,aAAc1C,EAAOgB,QAAQ0B,aAC7ByC,WAAW,EACXC,SAAUpF,EAAOgB,QAAQW,KACzBgB,OAAQ3C,EAAOgB,QAAQ2B,OACvB2C,iBAAiB,IAEnB,MAEF,QACEE,EAAYD,EAIhB,OAAOC,qdC3ET,MAAA3H,EAAAN,EAAAf,EAAA,IACAkJ,EAAAlJ,EAAA,KAGMmJ,EAFNpJ,EAAAC,EAAA,KAEmBG,QAAOiJ,IAAG/I,MAAAC,EAAA,+DAahBO,EAAAkC,IAAoB,WAAmB,OAClD1B,EAAAwB,cAACsG,EAAU,KACT9H,EAAAwB,cAACqG,EAAAG,SAAQ,0dCnBb,QAAAhI,EAAAN,EAAAf,EAAA,IACA4B,EAAA5B,EAAA,KACAsJ,EAAAvJ,EAAAC,EAAA,MACAuJ,EAAAxJ,EAAAC,EAAA,MACAwJ,EAAAzJ,EAAAC,EAAA,MACAyJ,EAAAzJ,EAAA,KACA0J,EAAA1J,EAAA,KAEA2J,EAAA3J,EAAA,KACAF,EAAAC,EAAAC,EAAA,KACAC,EAAAD,EAAA,IAEM4J,EAAU9J,EAAAK,QAAO0J,QAAOxJ,MAAAC,EAAA,0LAGG,wDAAjBL,EAAAM,OAAOuJ,YAKjBC,EAAiBjK,EAAAK,QAAO0J,QAAOG,MAAA1J,EAAA,uHAEJ,2CAAjBL,EAAAM,OAAOuJ,YAKVjJ,EAAAoJ,oBAAsB,SACjCC,GAcA,OACE7I,EAAAwB,cAAC+G,EAAO,KACNvI,EAAAwB,cAAC6G,EAAAS,KAAI,KACH9I,EAAAwB,cAACyG,EAAAnJ,QAAe,MAChBkB,EAAAwB,cAAC0G,EAAApJ,QAAU,CACTuI,SAAUwB,EAAMxB,SAChBtE,OAAQ8F,EAAM9F,OACdgG,SAnBa,SAACC,GACpBH,EAAME,SAASC,EAAMC,OAAOlF,QAmBtBmF,cAhBc,SAAC1F,GACrBqF,EAAMM,OAAO3F,IAgBP8D,UAAWuB,EAAMvB,YAEnBtH,EAAAwB,cAACkH,EAAc,KACZG,EAAMpB,iBACLzH,EAAAwB,cAAC2G,EAAArJ,QAAM,CACLuI,SAAUwB,EAAMxB,SAChBvD,KAAM+E,EAAMtB,SACZzC,OAAQ+D,EAAM/D,OACdwC,UAAWuB,EAAMvB,UACjBzC,aAAcgE,EAAMhE,gBAI1B7E,EAAAwB,cAAC4G,EAAAgB,SAAQ,CAACC,YA1BI,WAClBR,EAAMS,WAyBkChC,UAAWuB,EAAMvB,eAMhD9H,EAAAwI,SAAWzH,EAAAgJ,QACtBjB,EAAAkB,gBACAlB,EAAAmB,mBAFsBlJ,CAGtBf,EAAAoJ,ueCzEF,IAAA5I,EAAAN,EAAAf,EAAA,IACAF,EAAAC,EAAAC,EAAA,KACAC,EAAAD,EAAA,IAEaa,EAAA+I,QAAU9J,EAAAK,QAAO0J,QAAOxJ,MAAAC,EAAA,mFACJ,6CAAjBL,EAAAM,OAAOuJ,YAIVjJ,EAAAkK,MAAQjL,EAAAK,QAAO6K,GAAEhB,MAAA1J,EAAA,0JACJ,qBACC,2CAEU,8DAH1BL,EAAAM,OAAOC,SACDP,EAAAQ,MAAMC,KAENT,EAAAU,YAAYC,UAK7B,QAOAC,EAAAV,QAPsC,WAAmB,OACvDkB,EAAAwB,cAAChC,EAAA+I,QAAO,KACNvI,EAAAwB,cAAChC,EAAAkK,MAAK,iBACN1J,EAAAwB,cAAA,+ICMJhC,EAAAV,QA3Be,CACX8K,SAAU,UACVnB,WAAY,UACZoB,KAAM,UACNC,MAAO,UACPC,KAAM,UACN5K,SAAU,UACV6K,WAAY,UACZC,QAAS,UACTC,MAAO,UACPC,MAAO,UACPC,KAAM,UACNC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,YAAa,wBACbC,OAAQ,UACRC,OAAQ,UACRC,IAAK,UACLC,YAAa,UACbrF,KAAM,UACNsF,SAAU,UACVC,MAAO,UACPC,OAAQ,8FCdHxL,EAAAJ,MAVK,CACVC,KAAM,QASMG,EAAAF,YANI,CAChB2L,MAAO,IACPC,QAAS,IACT3L,SAAU,udCPd,UAAAS,EAAAN,EAAAf,EAAA,IACAF,EAAAC,EAAAC,EAAA,KAEAC,EAAAD,EAAA,IACAwM,EAAAxM,EAAA,KAEM4J,EAAU9J,EAAAK,QAAO0J,QAAOxJ,MAAAC,EAAA,+QAQxBmM,EAAY3M,EAAAK,QAAOiJ,IAAGY,MAAA1J,EAAA,2SAStBoM,EAAQ5M,EAAAK,QAAOwM,MAAKC,MAAAtM,EAAA,qNAGY,yEAAhBL,EAAAM,OAAOoL,WAyC7B9K,EAAAV,QAjCoC,SAACW,OACnC4H,EAAA5H,EAAA4H,SACAC,EAAA7H,EAAA6H,UACAyB,EAAAtJ,EAAAsJ,SACAG,EAAAzJ,EAAAyJ,cACAnG,EAAAtD,EAAAsD,OAOA,OACE/C,EAAAwB,cAAC+G,EAAO,KACNvI,EAAAwB,cAAC4J,EAAS,KACRpL,EAAAwB,cAAC6J,EAAK,CACJG,IAAI,cACJ1J,KAAK,OACLiC,MAAOhB,EACPgG,SAAU,SAAC0C,GAAM,OAZJ,SAACA,GACpBA,EAAEC,iBACF3C,EAAS0C,GAUcE,CAAaF,MAEhCzL,EAAAwB,cAAC2J,EAAAtM,OAAM,CACL+M,SAAUtE,IAAcvE,EAAOqB,QAAUiD,EACzCtD,MAAM,SACN8H,QAAS,WAAM,OAAA3C,EAAcnG,KAAO,+dC1D9C,QAAA/C,EAAAN,EAAAf,EAAA,IACAF,EAAAC,EAAAC,EAAA,KACAC,EAAAD,EAAA,IAYMmN,EAAUrN,EAAAK,QAAO6K,GAAE3K,MAAAC,EAAA,0HACE,2CAEU,uCAFpBL,EAAAQ,MAAMC,KAENT,EAAAU,YAAYC,UAIvBmK,EAAQjL,EAAAK,QAAO6K,GAAEhB,MAAA1J,EAAA,4HACuB,qBACnB,2CAEU,gCAH1B,SAAC4J,GAAuB,OAAAA,EAAMkD,OACxBnN,EAAAQ,MAAMC,KAENT,EAAAU,YAAYC,UA2C7BC,EAAAV,QAjBsC,SAACW,OACrC4H,EAAA5H,EAAA4H,SACAxC,EAAApF,EAAAoF,aACAyC,EAAA7H,EAAA6H,UACAxC,EAAArF,EAAAqF,OAGMkH,EArBqB,SAC3BlH,EACAhB,EACAe,GAEA,OAAOC,EAAS,EATE,SAAChB,EAAce,GACjC,MAAO,iBAAiBf,EAAI,MAAMe,EAS9BoH,CAAYnI,EAAMe,GAdL,SAACf,EAAcgB,GAChC,MAAO,aAAahB,EAAI,cAAcgB,EAAM,gBAcxCoH,CAAWpI,EAAMgB,GAcAqH,CAAqBrH,EAF1CrF,EAAAqE,KAEwDe,GAClDuH,EAZc,SAACtH,GACrB,OAAOA,EAAS,EAAI,GAAGlG,EAAAM,OAAO0L,IAAQ,GAAGhM,EAAAM,OAAOiL,MAW7BkC,CAAcvH,GACjC,OACE9E,EAAAwB,cAAAxB,EAAAsM,SAAA,KACEtM,EAAAwB,cAACkI,EAAK,CAACqC,MAAOK,GAAa/E,GAAY2E,GACtC1E,GAAatH,EAAAwB,cAACsK,EAAO,ueC/D5B,MAAA9L,EAAAN,EAAAf,EAAA,IACAwM,EAAAxM,EAAA,KAOM4J,EANN7J,EAAAC,EAAA,MAMgBG,QAAOiJ,IAAG/I,MAAAC,EAAA,2DAGbO,EAAA4J,SAAoC,SAAC3J,OAChD6H,EAAA7H,EAAA6H,UACA+B,EAAA5J,EAAA4J,YACiB,OACjBrJ,EAAAwB,cAAC+G,EAAO,KACNvI,EAAAwB,cAAC2J,EAAAtM,OAAM,CACL+M,SAAUtE,EACVuE,QAAS,WAAM,OAAAxC,KACfkD,MAAO,CAAEC,WAAY,IACrBzI,MAAM,SAAO,6dCpBnB,MAAA/D,EAAAN,EAAAf,EAAA,IAGM4J,EAFN7J,EAAAC,EAAA,MAEgBG,QAAOiJ,IAAG/I,MAAAC,EAAA,qQAWbO,EAAAsJ,KAA0B,SAACD,GACtC,OAAO7I,EAAAwB,cAAC+G,EAAO,KAAEM,EAAM4D,8FCdzB,IAAApM,EAAA1B,EAAA,IAUQwI,EAAAC,OAAAD,OAEK3H,EAAAgK,gBAAkB,SAAC9B,GAC9B,OAAOA,GAGIlI,EAAAiK,mBAAqB,SAChC5H,GAEA,OAAOsF,EAAO,CACZ4B,SAAU,SAAC5F,GACT,OAAAtB,EAAyB,CAAEC,KAAMzB,EAAA0B,SAASY,UAAWQ,QAAOA,KAC9DgG,OAAQ,WAAM,OAAAtH,EAAiB,CAAEC,KAAMzB,EAAA0B,SAASa,aAChD0G,QAAS,WAAM,OAAAzH,EAAkB,CAAEC,KAAMzB,EAAA0B,SAASU,oGCbtD,IAAMiK,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5I,MACvB,2DAgCN,SAAA6I,EAAyBC,GACvBC,UAAUC,cACPC,SAASH,GACTzH,KAAK,SAAA6H,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WAClCD,IACFA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5F,QACfuF,UAAUC,cAAcO,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAOvBC,MAAM,SAAA1D,GACLwD,QAAQxD,MAAM,4CAA6CA,KAvDjE1K,EAAAV,QAAA,WACE,GAA6C,kBAAmBmO,UAAW,CAMzE,GAJkB,IAAIY,IACpB,kBACAjB,OAAOC,SAASiB,YAEJC,SAAWnB,OAAOC,SAASkB,OAIvC,OAGFnB,OAAOoB,iBAAiB,OAAQ,WAC9B,IAAMhB,EAAW,oCAEZN,EA0CX,SAAiCM,GAE/B1H,MAAM0H,GACHzH,KAAK,SAAA1B,GAGkB,MAApBA,EAASoK,SACwD,IAAjEpK,EAASqK,QAAQC,IAAI,gBAAiBC,QAAQ,cAG9CnB,UAAUC,cAAcmB,MAAM9I,KAAK,SAAA6H,GACjCA,EAAakB,aAAa/I,KAAK,WAC7BqH,OAAOC,SAAS0B,aAKpBxB,EAAgBC,KAGnBY,MAAM,WACLF,QAAQC,IACN,mEA3DAa,CAAwBxB,GAHxBD,EAAgBC,OAmExBxN,EAAA8O,WAAA,WACM,kBAAmBrB,WACrBA,UAAUC,cAAcmB,MAAM9I,KAAK,SAAA6H,GACjCA,EAAakB","file":"static/js/main.aa31e055.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { colors, fonts, fontWeights } from '../../themes';\n\nexport interface ButtonPrimaryProps {\n    background?: string;\n    borderColor?: string;\n    borderSize?: number;\n    borderRadius?: number;\n    color?: string;\n    marginTop?: number;\n    marginRight?: number;\n    marginBottom?: number;\n    marginLeft?: number;\n}\n\nconst Button = styled.button<ButtonPrimaryProps>`\n    background: ${colors.darkBlue};\n    border-radius: 4px;\n    border: 1px solid ${colors.darkBlue};\n    color: white;\n    font-family: ${fonts.hind}\n    font-size: 1em;\n    font-weight: ${fontWeights.semiBold}\n    margin: 0.5em 1em;\n    padding 0.5em 1em;\n    text-transform: uppercase;\n`;\n\nexport { Button };\n","import * as styledComponents from 'styled-components';\nimport { ThemedStyledComponentsModule } from 'styled-components';\n\nimport ThemeInterface from './theme';\n\nconst {\n  default: styled,\n  css,\n  createGlobalStyle,\n  keyframes,\n  ThemeProvider\n} = styledComponents as ThemedStyledComponentsModule<ThemeInterface>;\n\nexport { css, createGlobalStyle, keyframes, ThemeProvider };\nexport default styled;","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { combineEpics, createEpicMiddleware } from \"redux-observable\";\nimport { initEpic, readyEpic, submitEpic } from \"./epics\";\nimport { TypeKeys } from \"./actions/actionTypes\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers\";\nimport { App } from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"./index.css\";\n\nconst rootEpic = combineEpics(initEpic, readyEpic, submitEpic);\nconst epicMiddleware = createEpicMiddleware(rootEpic);\nconst enhancers = applyMiddleware(epicMiddleware);\n\nconst store = createStore(reducer, composeWithDevTools(enhancers));\n\nconst dispatchInit = () => {\n  store.dispatch({ type: TypeKeys.ON_INIT });\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\") as HTMLElement\n);\nregisterServiceWorker();\ndispatchInit();\n","import { Action, MiddlewareAPI } from \"redux\";\nimport { ActionsObservable } from \"redux-observable\";\nimport { evaluateResponse, getResult } from \"../dictionary\";\nimport { Observable } from \"rxjs\";\nimport { ReadyState, RootState, SubmitWordForm } from \"../interfaces\";\nimport { TypeKeys } from \"../actions/actionTypes\";\nimport \"rxjs/add/operator/filter\";\n\nexport const initEpic = (\n  action: ActionsObservable<Action>,\n  store: MiddlewareAPI<ReadyState>\n): Observable<Action> =>\n  action.ofType(TypeKeys.ON_INIT).flatMap(() => {\n    return Observable.of({ type: TypeKeys.ON_READY });\n  });\n\nexport const readyEpic = (\n  action: ActionsObservable<Action>,\n  store: MiddlewareAPI<ReadyState>\n): Observable<Action> =>\n  action.ofType(TypeKeys.ON_READY).flatMap(() => {\n    return Observable.of({ type: TypeKeys.RESET_FORM });\n  });\n\nexport const changeEpic = (\n  action: ActionsObservable<Action>,\n  store: MiddlewareAPI<ReadyState>\n): Observable<Action> => action.ofType(TypeKeys.ON_CHANGE);\n\nexport const submitEpic = (\n  action: ActionsObservable<Action>,\n  store: MiddlewareAPI<RootState>\n): Observable<Action> =>\n  action.ofType(TypeKeys.ON_SUBMIT).flatMap(() => {\n    return getResult(store.getState().search)\n      .delay(5000)\n      .flatMap(\n        (res: Object): Observable<SubmitWordForm> =>\n          Observable.of<SubmitWordForm>({\n            type: TypeKeys.SUBMIT_COMPLETE,\n            payload: evaluateResponse(res, store.getState().search),\n          })\n      );\n  });\n","export { evaluateResponse, getResult } from './websterApi';\n","import { makeAPIRequest, HTTPMethod } from '../services';\nimport { Observable } from 'rxjs';\nimport { WordResult } from '../interfaces';\nimport { getWordScore } from '../scrabble';\n\nconst WEBSTER_API = 'https://www.dictionaryapi.com/api/v1/references/collegiate/xml/';\nconst WEBSTER_KEY = '08c63e42-bce1-4f63-8666-51b71d0e8380';\n\nconst sanitizeString = (word: string): string => {\n    return word.replace(/(?:<|<\\/)dt>|(?:<|<\\/)suggestion>|(?:<|<\\/)sx>|:/gi, '');\n};\n\nexport const getResult = (searchItem: string): Observable<string> => {\n    const url = `${WEBSTER_API}${searchItem}?key=${WEBSTER_KEY}`;\n    return makeAPIRequest(url, HTTPMethod.GET);\n};\n\nexport const evaluateResponse = (response: Object, search: string): WordResult => {\n\n    const value = String(response);\n\n    const definitionExpression = /<dt>(.*?)<\\/dt>/g;\n    const definitions: Array<string> | null  = value.match(definitionExpression);\n    const isOneLetter = search.length === 1;\n    const isValid = Array.isArray(definitions) && !isOneLetter;\n    const firstDefinition = Array.isArray(definitions) ? definitions[0] : '';\n    const suggestionExpression = /<suggestion>(.*?)<\\/suggestion>/g;\n    const suggestions: Array<string> | null  = value.match(suggestionExpression);\n\n    const getErrorMessage = (): string => {\n        return isOneLetter ? ' - a word must be two letters or more' : 'is not a valid scrabble word!';\n    };\n    const evaluateErrorMessage = (): string => { \n        return isValid ? '' : getErrorMessage();\n    };\n\n    return {\n        definition: sanitizeString(firstDefinition).trim(),\n        errorMessage: evaluateErrorMessage(),\n        result: isValid ? getWordScore(search) : 0,\n        suggestions: suggestions,\n        word: search,\n    };\n };\n","export * from './requests';\nimport { Observable } from 'rxjs';\n\ninterface Payload {\n    value: string;\n}\n\nexport enum HTTPMethod {\n    GET = 'get',\n    POST = 'post',\n}\n\nconst fetchRequest = (endPoint: string, method?: string, data?: Object): Observable<string> => {\n    const request = fetch(endPoint, {\n        method: method,\n    })\n        .then(response => response.text());\n    return Observable.fromPromise(request);\n};\n\nconst testData = () => {\n    return [\n        { username: 'russell', city: 'london' },\n        { username: 'grace', city: 'berlin' }\n    ]; \n};\n\nexport const makeDummyApiCall = (endPoint?: string): Observable<string> => {\n    return Observable.of(testData()).map(o => JSON.stringify(o));\n};\n\nexport const makeAPIRequest = (\n    endPoint: string,\n    method?: HTTPMethod,\n    data?: Payload): Observable<string> => {\n\n    switch (method) {\n        case HTTPMethod.POST:\n            return fetchRequest(endPoint, method);\n        case HTTPMethod.GET:\n            return fetchRequest(endPoint, method, data);\n        default:\n            return (makeDummyApiCall(endPoint));\n    }\n\n};\n","export const HTTPService = fetch;","import colors from './colors';\nimport { fonts, fontWeights } from './fonts';\n\nexport { colors, fonts, fontWeights };","export enum TypeKeys {\n    ON_CHANGE = 'ON_CHANGE',\n    ON_INIT = 'ON_INIT',\n    ON_READY = 'ON_READY',\n    ON_SUBMIT = 'ON_SUBMIT',\n    RESET_FORM = 'RESET_FORM',\n    SUBMIT_COMPLETE = 'SUBMIT_COMPLETE',\n    SUBMIT_WORD = 'SUBMIT_WORD',\n}","export * from './rules';","export interface Tile {\n    letter: string;\n    score: number;\n    count: number;\n} \nconst letterDistribution: Array<Tile> =\n    [{ letter: 'E', score: 1, count: 12 },\n    { letter: 'A', score: 1, count: 9 },\n    { letter: 'I', score: 1, count: 9 },\n    { letter: 'O', score: 1, count: 8 },\n    { letter: 'N', score: 1, count: 6 },\n    { letter: 'R', score: 1, count: 6 },\n    { letter: 'T', score: 1, count: 6 },\n    { letter: 'L', score: 1, count: 4 },\n    { letter: 'S', score: 1, count: 4 },\n    { letter: 'U', score: 1, count: 4 },\n    { letter: 'D', score: 2, count: 4 },\n    { letter: 'G', score: 2, count: 3 },\n    { letter: 'B', score: 3, count: 2 },\n    { letter: 'C', score: 3, count: 2 },\n    { letter: 'M', score: 3, count: 2 },\n    { letter: 'P', score: 3, count: 2 },\n    { letter: 'F', score: 4, count: 2 },\n    { letter: 'H', score: 4, count: 2 },\n    { letter: 'V', score: 4, count: 2 },\n    { letter: 'W', score: 4, count: 2 },\n    { letter: 'Y', score: 4, count: 2 },\n    { letter: 'K', score: 5, count: 1 },\n    { letter: 'J', score: 8, count: 1 },\n    { letter: 'X', score: 8, count: 1 },\n    { letter: 'Q', score: 10, count: 1 },\n    { letter: 'Z', score: 10, count: 1 }];\n\nconst getTileScore = (letter: string): number => {\n    const tile: Tile | undefined = letterDistribution.find(\n        x => x.letter === letter.toUpperCase()\n    );\n    return tile ? tile.score : 0;\n};\n\nexport const getWordScore = (word: string): number => {\n    if (word.length <= 1) {\n        return 0;\n    }\n    return word.split('')\n        .map(letter => getTileScore(letter))\n        .reduce((a: number, b: number) => a + b);\n};\n","import { TypeKeys } from \"../actions/actionTypes\";\nimport { DispatchActions } from \"../interfaces\";\nimport { AppProps } from \"../App\";\n\nconst { freeze } = Object;\n\nconst initialState = freeze({\n  complete: false,\n  errorMessage: \"\",\n  isLoading: true,\n  lastWord: \"\",\n  placeholder: \"\",\n  result: 0,\n  resultIsVisible: false,\n  search: \"\",\n});\n\nexport default function (\n  state: AppProps = initialState,\n  action: DispatchActions\n) {\n  let nextState;\n\n  switch (action.type) {\n    case TypeKeys.ON_READY:\n      nextState = {\n        ...state,\n        isLoading: false,\n      };\n      break;\n\n    case TypeKeys.RESET_FORM:\n      nextState = {\n        ...state,\n        complete: false,\n        resultIsVisible: false,\n        search: \"\",\n      };\n      break;\n\n    case TypeKeys.ON_CHANGE:\n      nextState = {\n        ...state,\n        complete: false,\n        search: action.payload,\n      };\n      break;\n\n    case TypeKeys.ON_SUBMIT:\n      nextState = {\n        ...state,\n        complete: false,\n        isLoading: true,\n        resultIsVisible: true,\n      };\n      break;\n\n    case TypeKeys.SUBMIT_COMPLETE:\n      nextState = {\n        ...state,\n        complete: true,\n        definition: action.payload.definition,\n        errorMessage: action.payload.errorMessage,\n        isLoading: false,\n        lastWord: action.payload.word,\n        result: action.payload.result,\n        resultIsVisible: true,\n      };\n      break;\n\n    default:\n      nextState = state;\n      break;\n  }\n\n  return nextState;\n}\n","import * as React from \"react\";\nimport { Scrabble } from \"./components/scrabble/Scrabble\";\nimport styled from \"styled-components\";\n\nconst AppWrapper = styled.div`\n  text-align: center;\n`;\n\nexport interface AppProps {\n  complete: boolean;\n  errorMessage: string;\n  lastWord: string;\n  placeholder: string;\n  result: number;\n  search: string;\n}\n\nexport const App: React.FC<{}> = (): JSX.Element => (\n  <AppWrapper>\n    <Scrabble />\n  </AppWrapper>\n);\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport ScrabbleContent from \"../content/ScrabbleContent\";\nimport SearchForm from \"../search/SearchForm\";\nimport Result from \"../result/Result\";\nimport { Controls } from \"../controls/Controls\";\nimport { Card } from \"../shared/Card\";\nimport { ChangeEvent, SubmitProps } from \"../../interfaces\";\nimport { mapDispatchToProps, mapStateToProps } from \"../../container\";\nimport styled from \"styled-components\";\nimport { colors } from \"../../themes\";\n\nconst Wrapper = styled.section`\n  display: flex;\n  justify-content: center;\n  background: ${colors.background};\n  padding-bottom: 3em;\n  padding-top: 0.5em;\n`;\n\nconst ResultsWrapper = styled.section`\n  display: block;\n  background: ${colors.background};\n  padding: 1em;\n  height: 32px;\n`;\n\nexport const UnconnectedScrabble = (\n  props: SubmitProps\n): React.ReactElement<SubmitProps> => {\n  const handleChange = (event: ChangeEvent): void => {\n    props.onChange(event.target.value);\n  };\n\n  const requestSearch = (searchItem: string): void => {\n    props.submit(searchItem);\n  };\n\n  const clearSearch = (): void => {\n    props.onReset();\n  };\n\n  return (\n    <Wrapper>\n      <Card>\n        <ScrabbleContent />\n        <SearchForm\n          complete={props.complete}\n          search={props.search}\n          onChange={handleChange}\n          requestSearch={requestSearch}\n          isLoading={props.isLoading}\n        />\n        <ResultsWrapper>\n          {props.resultIsVisible && (\n            <Result\n              complete={props.complete}\n              word={props.lastWord}\n              result={props.result}\n              isLoading={props.isLoading}\n              errorMessage={props.errorMessage}\n            />\n          )}\n        </ResultsWrapper>\n        <Controls clearSearch={clearSearch} isLoading={props.isLoading} />\n      </Card>\n    </Wrapper>\n  );\n};\n\nexport const Scrabble = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnconnectedScrabble);\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { colors, fonts, fontWeights } from \"../../themes\";\n\nexport const Wrapper = styled.section`\n  background: ${colors.background};\n  font-family: \"Hind\", sans-serif;\n`;\n\nexport const Title = styled.h2`\n  color: ${colors.darkBlue};\n  font-family: ${fonts.hind};\n  font-size: 1.75em;\n  font-weight: ${fontWeights.semiBold};\n  text-align: center;\n  text-transform: uppercase;\n`;\n\nconst ScrabbleContent: React.FC<{}> = (): JSX.Element => (\n  <Wrapper>\n    <Title>Scrabble</Title>\n    <p>Enter a word to find out it's scrabble score.</p>\n  </Wrapper>\n);\n\nexport default ScrabbleContent;\n","const colors = {\n    babyBlue: '#cbe7f5',\n    background: '#f8f9fa',\n    blue: '#3da5d9',\n    brand: '#b8222f',\n    dark: '#cecece',\n    darkBlue: '#2993C8',\n    darkPurple: '#9769B0',\n    divider: '#c8c7cc',\n    error: '#d13440',\n    green: '#7fb069',\n    grey: '#e6e6e6',\n    lightBlue: '#d8edf7',\n    lightGrey: '#dbdbdb',\n    lightIcon: '#ffffff',\n    lightText: '#868e96',\n    offlineHead: 'rgba(54, 54, 54, 1.0)',\n    orange: '#f79900',\n    purple: '#9c70b4',\n    red: '#d13440',\n    sectionText: '#6d6d72',\n    text: '#4a4a4a',\n    warmGrey: '#757575',\n    white: '#ffffff',\n    yellow: '#fabc56',\n};\n\nexport default colors;\n","const fonts = {\n    hind: 'hind',\n};\n\nconst fontWeights = {\n    light: 300,\n    regular: 400,\n    semiBold: 600,\n};\n\nexport { fonts, fontWeights };","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { SearchFormProps, FormState } from \"../../interfaces\";\nimport { colors } from \"../../themes\";\nimport { Button } from \"../shared\";\n\nconst Wrapper = styled.section`\n  align-content: flex-start;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst SearchRow = styled.div`\n  align-content: center;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  min-height: 75px;\n`;\n\nconst Input = styled.input`\n  background: white;\n  border-radius: 4px;\n  border: 1px solid ${colors.lightGrey};\n  font-size: 14px;\n  margin: 0.5em 1em;\n  padding 0.5em 1em;\n`;\n\ntype Props = SearchFormProps & FormState;\n\nconst SearchForm: React.FC<Props> = ({\n  complete,\n  isLoading,\n  onChange,\n  requestSearch,\n  search,\n}): JSX.Element => {\n  const updateSearch = (e: React.ChangeEvent) => {\n    e.preventDefault();\n    onChange(e);\n  };\n\n  return (\n    <Wrapper>\n      <SearchRow>\n        <Input\n          key=\"searchInput\"\n          type=\"text\"\n          value={search}\n          onChange={(e) => updateSearch(e)}\n        />\n        <Button\n          disabled={isLoading || !search.length || complete}\n          value=\"Search\"\n          onClick={() => requestSearch(search)}\n        >\n          Search\n        </Button>\n      </SearchRow>\n    </Wrapper>\n  );\n};\n\nexport default SearchForm;\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { colors, fonts, fontWeights } from \"../../themes\";\n\n// TODO should this be elsewhere?\ninterface ResultProps {\n  complete: boolean;\n  isLoading: boolean;\n  result: number;\n  word: string;\n  color?: string;\n  errorMessage: string;\n}\n\nconst Loading = styled.h2`\n  font-family: ${fonts.hind};\n  font-size: 1.25em;\n  font-weight: ${fontWeights.semiBold};\n  text-transform: uppercase;\n`;\n\nconst Title = styled.h2`\n  color: ${(props: ResultProps) => props.color};\n  font-family: ${fonts.hind};\n  font-size: 1.25em;\n  font-weight: ${fontWeights.semiBold};\n  text-align: center;\n`;\n\nconst wordResult = (word: string, result: number) => {\n  return `The word \"${word}\" is worth ${result} in Scrabble.`;\n};\n\nconst errorString = (word: string, errorMessage: string) => {\n  return `error - word \"${word}\"  ${errorMessage}`;\n};\n\nconst evaluateResultString = (\n  result: number,\n  word: string,\n  errorMessage: string\n) => {\n  return result < 1\n    ? errorString(word, errorMessage)\n    : wordResult(word, result);\n};\n\nconst getTitleColor = (result: number): string => {\n  return result < 1 ? `${colors.red}` : `${colors.green}`;\n};\n\nconst Result: React.FC<ResultProps> = ({\n  complete,\n  errorMessage,\n  isLoading,\n  result,\n  word,\n}): JSX.Element => {\n  const resultString = evaluateResultString(result, word, errorMessage);\n  const titleColor = getTitleColor(result);\n  return (\n    <>\n      <Title color={titleColor}>{complete && resultString}</Title>\n      {isLoading && <Loading>loading...</Loading>}\n    </>\n  );\n};\n\nexport default Result;\n","import * as React from \"react\";\nimport { Button } from \"../shared\";\nimport styled from \"../style/styled-components\";\nexport interface ControlsProps {\n  clearSearch: Function;\n  isLoading: boolean;\n}\n\nconst Wrapper = styled.div`\n  margin-top: 20px;\n`;\nexport const Controls: React.FC<ControlsProps> = ({\n  isLoading,\n  clearSearch,\n}): JSX.Element => (\n  <Wrapper>\n    <Button\n      disabled={isLoading}\n      onClick={() => clearSearch()}\n      style={{ marginLeft: 10 }}\n      value=\"Clear\"\n    >\n      Clear\n    </Button>\n  </Wrapper>\n);\n","import * as React from \"react\";\nimport styled from \"../style/styled-components\";\n\nconst Wrapper = styled.div`\n margin: 10px;\n border 1px solid black;\n max-width: 600px;\n min-width: 500px;\n padding: 40px;\n border-radius: 20px;\n`;\n\ninterface MyProps {}\n\nexport const Card: React.FC<MyProps> = (props) => {\n  return <Wrapper>{props.children}</Wrapper>;\n};\n","import { Action, Dispatch } from \"redux\";\nimport { TypeKeys } from \"./actions/actionTypes\";\nimport {\n  RootState,\n  //  OnReset, // TODO see if there are dulicates of the Interfaces?\n  ScrabbleDispatchActions,\n  Submit,\n  OnChangeAction,\n  SubmitProps,\n} from \"./interfaces\";\nimport { OnReset } from \"./actionCreators\";\nconst { freeze } = Object;\n\nexport const mapStateToProps = (state: RootState): SubmitProps => {\n  return state;\n};\n\nexport const mapDispatchToProps = (\n  dispatch: Dispatch<Action>\n): ScrabbleDispatchActions => {\n  return freeze({\n    onChange: (payload: string) =>\n      dispatch<OnChangeAction>({ type: TypeKeys.ON_CHANGE, payload }),\n    submit: () => dispatch<Submit>({ type: TypeKeys.ON_SUBMIT }),\n    onReset: () => dispatch<OnReset>({ type: TypeKeys.RESET_FORM }),\n  });\n};\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}